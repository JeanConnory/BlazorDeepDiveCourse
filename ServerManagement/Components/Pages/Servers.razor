@page "/servers"
@page "/servers/back_from/{cityName}"
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<h3>Servers</h3>
<br />
<br />

<CityListComponent @ref="cityListComponent" SelectCityCallback="HandleCitySelection"
    selectedCity="@this.selectedCity"></CityListComponent>

<br />

<SearchBarComponent @ref="searchBarComponent" SearchServerCallback="HandleSearchServer" 
    data-my-attribute="my data"></SearchBarComponent>

<br />

<CascadingValue Name="SelectedCity" Value="@selectedCity">
    <ServerListComponent @rendermode="InteractiveServer"
                         CityName="@this.selectedCity"
                         SearchFilter="@searchFilter"></ServerListComponent>
</CascadingValue>

<br />

<p>
    <a href="/servers/add" class="btn btn-primary">Add Server</a>
</p>

@code {
    [Parameter]
    public string? CityName { get; set; }

    private string selectedCity = "Toronto";

    private string searchFilter = "";

    private CityListComponent? cityListComponent;

    private SearchBarComponent? searchBarComponent;

    private List<string> cities = CitiesRepository.GetCities();

    private void HandleCitySelection(string cityName)
    {
        selectedCity = cityName;
        this.searchFilter = string.Empty;
        searchBarComponent?.ClearFilter();
    }

    private void HandleSearchServer(string searchFilter)
    {
        this.searchFilter = searchFilter;
        cityListComponent?.ClearSelection();
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if(firstRender)
        {
            if(NavigationManager.Uri.Contains("back_from") && !string.IsNullOrWhiteSpace(CityName))
            {
                selectedCity = CityName;
                StateHasChanged();
            }
        }
    }
}
